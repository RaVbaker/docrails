== Kontrolery ==

W tym rozdziale dowiemy się, jak stworzyć kontroler dla naszych pluginowych dzięciołów. Nazwiemy go 'woodpeckers' i będzie zachowywał się tak samo jak kontroler w głównej aplikacji. Wszystko będzie przebiegać bardzo podobnie jak w przypadku dodawania modelu.

Możemy przetestować kontroler pluginu tak jak każdy inny kontroler:

*vendor/plugins/yaffle/test/woodpeckers_controller_test.rb:*

[source, ruby]
----------------------------------------------
require File.dirname(__FILE__) + '/test_helper.rb'
require 'woodpeckers_controller'
require 'action_controller/test_process'

class WoodpeckersController; def rescue_action(e) raise e end; end

class WoodpeckersControllerTest < Test::Unit::TestCase
  def setup
    @controller = WoodpeckersController.new
    @request = ActionController::TestRequest.new
    @response = ActionController::TestResponse.new
    
    ActionController::Routing::Routes.draw do |map|
      map.resources :woodpeckers
    end    
  end

  def test_index
    get :index
    assert_response :success
  end
end
----------------------------------------------

Tak jak poprzednio, ten test sprawdza tylko czy poprawnie załadowaliśmy kontroler. Na chwilę obecną `rake` sypnie błędami, więc do pracy:

*vendor/plugins/yaffle/lib/yaffle.rb:*

[source, ruby]
----------------------------------------------
%w{ models controllers }.each do |dir|
  path = File.join(File.dirname(__FILE__), 'app', dir)
  $LOAD_PATH << path
  ActiveSupport::Dependencies.load_paths << path
  ActiveSupport::Dependencies.load_once_paths.delete(path)
end
----------------------------------------------


*vendor/plugins/yaffle/lib/app/controllers/woodpeckers_controller.rb:*

[source, ruby]
----------------------------------------------
class WoodpeckersController < ActionController::Base
  
  def index
    render :text => "Squawk!"
  end
  
end
----------------------------------------------

Teraz test powinien przebiegać poprawnie i powinniśmy być w stanie używać kontrolera 'woodpeckers' w naszej aplikacji. Jeśli dodamy ścieżkę (route) do 'woodpeckers' możemy uruchomić serwer i zobaczyć nasz kontroler w akcji pod adresem http://localhost:3000/woodpeckers.