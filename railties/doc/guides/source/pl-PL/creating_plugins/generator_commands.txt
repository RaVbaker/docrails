== Polecenia generatora ==

Poniżej zauważysz, że możemy użyć jednego z wbudowanych w Railsy poleceń migracji `migration_template`. Jeśli nasz plugin ma dodawać i usuwać linie tekstu z istniejących plików to będziemy musieli napisać własne metody generatora.

Dowiemy się teraz jak stworzyć własne polecenia generatora, które będą dodawać i usuwać linie tekstu do/z pliku 'config/routes.rb'.

Na początek, standardowo, zaczniemy od testu:

*vendor/plugins/yaffle/test/route_generator_test.rb*

[source, ruby]
-----------------------------------------------------------
require File.dirname(__FILE__) + '/test_helper.rb'
require 'rails_generator'
require 'rails_generator/scripts/generate'
require 'rails_generator/scripts/destroy'

class RouteGeneratorTest < Test::Unit::TestCase

  def setup
    FileUtils.mkdir_p(File.join(fake_rails_root, "config"))
  end
  
  def teardown
    FileUtils.rm_r(fake_rails_root)
  end
  
  def test_generates_route
    content = <<-END
      ActionController::Routing::Routes.draw do |map|
        map.connect ':controller/:action/:id'
        map.connect ':controller/:action/:id.:format'
      end
    END
    File.open(routes_path, 'wb') {|f| f.write(content) }
    
    Rails::Generator::Scripts::Generate.new.run(["yaffle_route"], :destination => fake_rails_root)
    assert_match /map\.yaffles/, File.read(routes_path)
  end

  def test_destroys_route
    content = <<-END
      ActionController::Routing::Routes.draw do |map|
        map.yaffles
        map.connect ':controller/:action/:id'
        map.connect ':controller/:action/:id.:format'
      end
    END
    File.open(routes_path, 'wb') {|f| f.write(content) }
    
    Rails::Generator::Scripts::Destroy.new.run(["yaffle_route"], :destination => fake_rails_root)
    assert_no_match /map\.yaffles/, File.read(routes_path)
  end
  
  private
  
    def fake_rails_root
      File.join(File.dirname(__FILE__), "rails_root")
    end
  
    def routes_path
      File.join(fake_rails_root, "config", "routes.rb")
    end
  
end
-----------------------------------------------------------

`Rake` oczywiście zgłosi protest, więc wprowadzamy poprawki:

*vendor/plugins/yaffle/lib/yaffle.rb*

[source, ruby]
-----------------------------------------------------------
require "yaffle/commands"
-----------------------------------------------------------

*vendor/plugins/yaffle/lib/yaffle/commands.rb*

[source, ruby]
-----------------------------------------------------------
require 'rails_generator'
require 'rails_generator/commands'

module Yaffle #:nodoc:
  module Generator #:nodoc:
    module Commands #:nodoc:
      module Create
        def yaffle_route
          logger.route "map.yaffle"
          look_for = 'ActionController::Routing::Routes.draw do |map|'
          unless options[:pretend]
            gsub_file('config/routes.rb', /(#{Regexp.escape(look_for)})/mi){|match| "#{match}\n  map.yaffles\n"}
          end
        end
      end

      module Destroy
        def yaffle_route
          logger.route "map.yaffle"
          gsub_file 'config/routes.rb', /\n.+?map\.yaffles/mi, ''
        end
      end

      module List
        def yaffle_route
        end
      end

      module Update
        def yaffle_route
        end
      end
    end
  end
end

Rails::Generator::Commands::Create.send   :include,  Yaffle::Generator::Commands::Create
Rails::Generator::Commands::Destroy.send  :include,  Yaffle::Generator::Commands::Destroy
Rails::Generator::Commands::List.send     :include,  Yaffle::Generator::Commands::List
Rails::Generator::Commands::Update.send   :include,  Yaffle::Generator::Commands::Update
-----------------------------------------------------------

*vendor/plugins/yaffle/generators/yaffle_route/yaffle_route_generator.rb*

[source, ruby]
-----------------------------------------------------------
class YaffleRouteGenerator < Rails::Generator::Base
  def manifest
    record do |m|
      m.yaffle_route
    end
  end
end
-----------------------------------------------------------

Wypróbujmy nasz generator w akcji:

-----------------------------------------------------------
./script/generate yaffle_route
./script/destroy yaffle_route
-----------------------------------------------------------

.Od autora:
NOTE: Jeśli nie skonfigurowałeś wcześniej własnej ścieżki zgodnie z wcześniejszym opisem, to 'script/destroy' się nie powiedzie i będziesz musiał usunąć ją ręcznie.