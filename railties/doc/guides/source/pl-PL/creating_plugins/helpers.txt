== Helpery ==

W tym rozdziale dowiemy się jak dodać helpera 'WoodpeckersHelper' do naszego pluginu. Będzie on zachowywał się tak samo jak helper w głównej aplikacji. Proces jest analogiczny do postępowania z modelami i kontrolerami.

Test dla helpera pluginu wygląda tak samo jak dla normalnego helpera:

*vendor/plugins/yaffle/test/woodpeckers_helper_test.rb*

[source, ruby]
---------------------------------------------------------------
require File.dirname(__FILE__) + '/test_helper.rb'
include WoodpeckersHelper

class WoodpeckersHelperTest < Test::Unit::TestCase
  def test_tweet
    assert_equal "Tweet! Hello", tweet("Hello")
  end
end
---------------------------------------------------------------

Sprawdza on czy nasz helper został załadowany poprawnie. Oczywiście `rake` zwróci błąd, więc aby wszystko grało edytujemy to i owo:

*vendor/plugins/yaffle/lib/yaffle.rb:*

[source, ruby]
----------------------------------------------
%w{ models controllers helpers }.each do |dir|
  path = File.join(File.dirname(__FILE__), 'app', dir)
  $LOAD_PATH << path
  ActiveSupport::Dependencies.load_paths << path
  ActiveSupport::Dependencies.load_once_paths.delete(path)
end
----------------------------------------------


*vendor/plugins/yaffle/lib/app/helpers/woodpeckers_helper.rb:*

[source, ruby]
----------------------------------------------
module WoodpeckersHelper
  
  def tweet(text)
    "Tweet! #{text}"
  end
  
end
----------------------------------------------

Teraz test powinien kończyć się bez błędów, a my możemy używać helpera 'WoodpeckersHelper' w naszej aplikacji.