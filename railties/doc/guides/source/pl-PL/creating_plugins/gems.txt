== PluginGems ==

Przekształcenie naszego plugina w gema jest bardzo prostym zadaniem. Właśnie tym zajmiemy się w tym rozdziale. Nie będziemy natomiast omawiac sposobu dystrybucji tego gema.

Tradycyjnie pluginy railsowe ładowały plik 'init.rb' pluginu. Faktycznie niektóre pluginy zawierają cały swój kod w tym jednym pliku. Dla kompatybilności z pluginami, 'init.rb' został przeniesiony do 'rails/init.rb'.

Powszechną praktyką jest umieszczanie wszelkich deweloperskich zadań modułu rake (takich jak testy, rdoc i tworzenie paczek gemów) w 'Rakefile'. Zadanie modułu rake, które tworzy gema, może wyglądać np. tak:

*vendor/plugins/yaffle/Rakefile:*

[source, ruby]
----------------------------------------------
PKG_FILES = FileList[
  '[a-zA-Z]*',
  'generators/**/*', 
  'lib/**/*', 
  'rails/**/*',
  'tasks/**/*', 
  'test/**/*'
]

spec = Gem::Specification.new do |s| 
  s.name = "yaffle"
  s.version = "0.0.1"
  s.author = "Gleeful Yaffler"
  s.email = "yaffle@example.com"
  s.homepage = "http://yafflers.example.com/"
  s.platform = Gem::Platform::RUBY
  s.summary = "Sharing Yaffle Goodness"
  s.files = PKG_FILES.to_a
  s.require_path = "lib"
  s.has_rdoc = false
  s.extra_rdoc_files = ["README"]
end

desc 'Turn this plugin into a gem.'
Rake::GemPackageTask.new(spec) do |pkg|
  pkg.gem_spec = spec
end 
----------------------------------------------

Aby zbudować i zainstalować gema lokalnie, należy wykonać następujące polecenia:

----------------------------------------------
cd vendor/plugins/yaffle
rake gem
sudo gem install pkg/yaffle-0.0.1.gem
----------------------------------------------

Aby to przetestować, należy stworzyć nową aplikację i dodać 'config.gem "yaffle"' do 'environment'rb', a wszystkie funkcjonalności plugina będą dostępne.