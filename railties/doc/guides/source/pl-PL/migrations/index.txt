Migracje
==========

Migracje są wygodnym sposobem, by w zorganizowany sposób modyfikować bazę danych. Mógłbyś oczywiście edytować fragmenty kodu SQL ręcznie, ale musiałbyś potem samemu zatroszczyć się o to, by poinformować inny projektantów o konieczności wykonania potrzebnych zmian. Musiałbyś też pilnować jakie zmiany należy wprowadzić na serwerze, na którym działa ostateczna wersja tworzonego serwisu. Moduł Active Record śledzi migracje, które zostały już wykonane, więc jedyne co musisz wykonać ze swojej strony, to wprowadzenie zmian w kodzie i wykonanie polecenia 'rake db:migrate'. Moduł Active Record sam zdecyduje, które migracje powinny zostać wykonane. Zaktualizuje on też schemat bazy danych zawarty w pliku db/schema.rb tak, by odpowiadał on aktualnej strukturze Twojej bazy.

Migracje pozwalają na opisanie zmian bazy danych w Rubym. Dzięki temu, podobnie jak większość funkcji modułu Active Record, nie zależą one od używanej przez Ciebie wersji bazy danych. Nie musisz więc martwić się o dokładną składnię komendy CREATE TABLE ani zastanawiać się nad różnymi wariacjami polecenia SELECT *. Możesz na przykład użyć SQLite3 podczas tworzenia, a MySQL w gotowym, udostępnionym serwisie.

W poniższym przewodniku dowiesz się wszystkiego o migracjach. W szczególności, tekst opisuje:

* generatory używane przy tworzeniu migracji
* metody modułu Active Record służące do modyfikacji bazy danych
* zadania Rade działające na migracjach
* powiązania między migracjami a plikiem schema.rb

include::anatomy_of_a_migration.txt[]
include::creating_a_migration.txt[]
include::writing_a_migration.txt[]
include::rakeing_around.txt[]
include::using_models_in_migrations.txt[]
include::scheming.txt[]
include::foreign_keys.txt[]
include::changelog.txt[]
